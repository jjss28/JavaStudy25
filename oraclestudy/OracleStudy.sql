desc emp;  --emp 테이블 구조보기
select*from emp; --emp 테이블 내용보기

desc dept; --dept 테이블 구조보기
select*from dept; --dept 테이블 내용보기

desc bonus; -- bonus 테이블 구조보기
select*from bonus; --bonus 테이블 내용보기

desc salgrade;  --salgrade 테이블 구조보기
select*from salgrade; --salgrade 테이블 내용보기

select distinct deptno from emp; --disdinct로 열의 중복 제거하기

select distinct job, deptno from emp; --여러 개 열을 명시하여 중복제거하기

select all job, deptno from emp; --직책, 부서 번호 출력하기

select ename, sal, sal*12+comm, comm from emp; --열에 연산식을 사용하여 출력하기

select ename, sal, sal+sal+sal+sal+sal+sal+sal+sal+sal+sal+sal+sal+comm from emp; --곱하기를 사용하지 않고 사원의 연간 총 수입 출력하기

select ename, sal, sal*12+comm as annsal, comm from emp; --별칭을 사용하여 사원의 연간 총 수입 출력하기

select * from emp order by sal; --emp 테이블의 모든열을 급여기준으로 오름차순 정렬

select * from emp order by sal desc; --emp 테이블의 모든열을 급여 기준으로 내림차순 정렬

select * from emp order by deptno asc, sal desc; --emp 테이블의 전체열을 부서번호(오름차순)와 급여(내림차순)로 정렬하기

select empno as employee_no, ename as employee_name, job, mgr as manager, hiredate, sal as salary, comm as commssion, deptno as department_no from emp order by deptno desc, ename;

select * from emp;

select * from emp where deptno = 30;

select * from emp where deptno = 30 AND job = 'SALESMAN'; --AND 연산자로 여러개의 조건식 사용하기

select * from emp where sal * 12 = 36000; --곱셈 산술 연산자를 사용한 예

select * from emp where sal >= 3000; --대소비교 연산자 사용하여 출력하기

select * from emp where ename >= 'F'; --문자를 대소 비교 연산자로 비교하기

select * from emp where ename <= 'FORZ'; --문자열을 대소 비교 연산자로 비교하기

select * from emp where sal != 3000;

select * from emp where sal <> 3000;

select * from emp where sal ^= 3000; --위 3가지 모두 '같지 않다'로 똑같은 의미를 가짐.

select * from emp where not sal = 3000;

select * from emp where job = 'MANAGER' or job = 'SALESMAN' or job = 'CLERK';

select * from emp where job in ('MANAGER', 'SALESMAN', 'CLERK');

select * from emp where job != 'MANAGER' and job <> 'SALESMAN' and job ^='CLERK';

select * from emp where job not in ('MANAGER', 'SALESMAN', 'CLERK');

select * from emp where sal >= 2000 and sal <= 3000; -- 대소 비교 연산자와 and 연산자를 사용하여 출력

select * from emp where sal between 2000 and 3000;

select * from emp where sal not between 2000 and 3000;

select * from emp where ename like 'S%'; --%는 와일드 카드

select * from emp where ename like '_L%'; --사원 이름의 두번째 글자가 L인 사원만 출력하기

select * from emp where ename like '%AM%';

select * from emp where ename not like '%AM%';

select ename, sal, sal*12+comm as annsal, comm from emp;

select * from emp where comm = NULL; --null은 아무것도 안나옴

select * from emp where comm is null;

select * from emp where mgr is not null;

select * from emp where sal > null and comm is null;

select * from emp where sal > null or comm is null;

select empno, ename, sal, deptno from emp where deptno = 10 union select empno, ename, sal, deptno from emp where deptno = 20;

select empno, ename, sal, deptno from emp where deptno = 10 union select empno, ename, sal from emp where deptno =20;

select empno, ename, sal, deptno from emp where deptno = 10 union select ename, empno, deptno, sal from emp where deptno = 20;

select empno, ename, sal, deptno from emp where deptno = 10 union select sal, job, deptno, sal from emp where deptno = 20;

select empno, ename, sal, deptno from emp where deptno = 10 union select empno, ename, sal, deptno from emp where deptno = 10;

select empno, ename, sal, deptno from emp where deptno = 10 union all select empno, ename, sal, deptno from emp where deptno = 10;

select empno, ename, sal, deptno from emp minus select empno, ename, sal, deptno from emp where deptno = 10;

select empno, ename, sal, deptno from emp intersect select empno, ename, sal, deptno from emp where deptno = 10;

select * from emp where ename like '%S';

SELECT EMPNO, ENAME, JOB, SAL, DEPTNO FROM EMP WHERE DEPTNO = 30 AND JOB = 'SALESMAN';

SELECT EMPNO, ENAME, JOB, SAL, DEPTNO FROM EMP WHERE DEPTNO IN (20, 30)  AND SAL > 2000;

select * from emp, dept order by empno;

select * from emp, dept where emp.deptno = dept.deptno order by empno;

select * from emp E, dept D where E.deptno = D.deptno order by empno; --윗줄과 동일 별칭만 붙인 것.

select empno, ename, deptno, dname, loc from emp E, dept D where E.deptno = D.deptno;

select E.empno, E.ename, D.deptno, D.dname, D.loc from emp E, dept D where E.deptno = D.DEPTNO order by D.DEPTNO, E.EMPNO;

select E.empno, E.ename, E.sal, D.deptno, D.dname, D.loc from emp E, dept D where E.deptno = D.DEPTNO and sal >= 3000;

select * from emp E, salgrade S where E. sal between S.losal and S.hisal;

select E1. empno, E1. ename, E1.mgr, E2.empno as mgr_empno, E2.ename as mgr_ename from emp E1, emp E2 where E1.mgr = E2. empno; --같은 테이블 두번 사용 자체조인

select E1. empno, E1.ename, E1.mgr, E2.empno as mgr_empno, E2. ename as mgr_ename from emp E1, emp E2 where E1.mgr = E2. empno(+) order by E1.empno;

create table dept_temp as select * from dept;

select * from dept_temp;

insert into dept_temp (deptno, dname, loc) values (50, 'database', 'seoul');

select * from dept_temp;

insert into dept_temp values (60, 'NETWORK', 'BUSAN');

select * from dept_temp;

insert into dept_temp (deptno, dname, loc) values(70, 'WEB', NULL); 

select * from dept_temp;

insert into dept_temp(deptno, dname, loc) values (80, 'MOBILE', '');

select * from dept_temp;

insert into dept_temp (deptno, loc) values (90, 'INCHEON');

select * from dept_temp;

CREATE TABLE EMP_TEMP AS SELECT * FROM EMP WHERE 1<>1; 

select * from dept_temp;

INSERT INTO EMP_TEMP (EMPNO, ENAME, JOB, MGR, HIREDATE, SAL, COMM, DEPTNO) VALUES (9999, '홍길동', 'PRESIDENT', NULL, '2001/01/01', 5000, 1000, 10);

SELECT * FROM EMP_TEMP;

INSERT INTO EMP_TEMP (EMPNO, ENAME, JOB, MGR, HIREDATE, SAL, COMM, DEPTNO) VALUES (1111, '성춘향', 'MANAGER', 9999, '2001-01-05', 4000, NULL, 20);

SELECT * FROM EMP_TEMP;

INSERT INTO EMP_TEMP (EMPNO, ENAME, JOB, MGR, HIREDATE, SAL, COMM, DEPTNO) VALUES (2111, '이순신', 'MANAGER', 9999, '07/01/2001', 4000, NULL, 20);

INSERT INTO EMP_TEMP (EMPNO, ENAME, JOB, MGR, HIREDATE, SAL, COMM, DEPTNO) VALUES (2111, '이순신', 'MANAGER', 9999, TO_DATE('07/01/2001', 'DD/MM/YYYY'), 4000, NULL, 20);

SELECT * FROM EMP_TEMP;

INSERT INTO EMP_TEMP (EMPNO, ENAME, JOB, MGR, HIREDATE, SAL, COMM, DEPTNO) VALUES (3111, '심청이', 'MANAGER', 9999, SYSDATE, 4000, NULL, 30);

SELECT * FROM EMP_TEMP;

INSERT INTO EMP_TEMP (EMPNO, ENAME, JOB, MGR, HIREDATE, SAL, COMM, DEPTNO) SELECT E.EMPNO, E.ENAME, E.JOB, E.MGR, E.HIREDATE, E.SAL, E.COMM, E.DEPTNO FROM EMP E, SALGRADE S WHERE E.SAL BETWEEN S.LOSAL AND S.HISAL AND S.GRADE = 1;

SELECT * FROM EMP_TEMP;

CREATE TABLE DEPT_TEMP2 AS SELECT * FROM DEPT;

SELECT * FROM DEPT_TEMP2;

UPDATE DEPT_TEMP2 SET LOC = 'SEOUL';

SELECT * FROM DEPT_TEMP2;

ROLLBACK;

UPDATE DEPT_TEMP2 SET DNAME = 'DATABASE', LOC = 'SEOUL' WHERE DEPTNO = 40;

SELECT * FROM DEPT_TEMP2;

UPDATE DEPT_TEMP2 SET (DNAME, LOC) = (SELECT DNAME, LOC FROM DEPT WHERE DEPTNO = 40) WHERE DEPTNO = 40;

SELECT * FROM DEPT_TEMP2;

UPDATE DEPT_TEMP2 SET DNAME = (SELECT DNAME FROM DEPT WHERE DEPTNO = 40), LOC = (SELECT LOC FROM DEPT WHERE DEPTNO = 40) WHERE DEPTNO =40;

UPDATE DEPT_TEMP2 SET LOC = 'SEOUL' WHERE DEPTNO = (SELECT DEPTNO FROM DEPT_TEMP2 WHERE DNAME = 'OPERATIONS');

SELECT * FROM DEPT_TEMP2;

UPDATE DEPT_TEMP2 SET DNAME = 'DATABASE', LOC = 'SEOUL' WHERE DEPTNO = 40;

SELECT * FROM DEPT_TEMP2 WHERE DEPTNO = 40;

CREATE TABLE EMP_TEMP2 AS SELECT * FROM EMP;

SELECT * FROM EMP_TEMP2;

DELETE FROM EMP_TEMP2 WHERE JOB = 'MANAGER';

SELECT * FROM EMP_TEMP2;

DELETE FROM EMP_TEMP2 WHERE EMPNO IN (SELECT E.EMPNO FROM EMP_TEMP2 e, SALGRADE S WHERE E. SAL BETWEEN S.LOSAL AND S.HISAL AND S.GRADE = 3 AND DEPTNO = 30);

SELECT * FROM EMP_TEMP2;

DELETE FROM EMP_TEMP2;

SELECT * FROM EMP_TEMP2;

CREATE TABLE CHAP10HW_EMP AS SELECT * FROM EMP;

CREATE TABLE CHAP10HW_DEPT AS SELECT * FROM DEPT;

CREATE TABLE CHAP10HW_SALGRADE AS SELECT * FROM SALGRADE;

CREATE TABLE DEPT_TCL AS SELECT * FROM DEPT;

SELECT * FROM DEPT_TCL;

INSERT INTO DEPT_TCL VALUES(50, 'DATABASE', 'SEOUL');

UPDATE DEPT_TCL SET LOC = 'BUSAN' WHERE DEPTNO = 40;

DELETE FROM DEPT_TCL WHERE DNAME = 'RESEARCH';

SELECT * FROM DEPT_TCL;

CREATE TABLE EMP_DDL (EMPNO NUMBER(4), ENAME VARCHAR2(10), JOB VARCHAR2(9), MGR NUMBER(4), HIREDATE DATE, SAL NUMBER(7,2), COMM NUMBER(7,2), DEPTNO NUMBER(2));

DESC EMP_DDL;

CREATE TABLE DEPT_DDL AS SELECT * FROM DEPT;

DESC DEPT_DDL;

SELECT * FROM DEPT_DDL;

CREATE TABLE EMP_DDL_30 AS SELECT * FROM EMP WHERE DEPTNO = 30;

SELECT * FROM EMP_DDL_30;

CREATE TABLE EMPDEPT_DDL AS SELECT E.EMPNO, E.ENAME, E.JOB, E.MGR, E.HIREDATE, E.SAL, E.COMM, D.DEPTNO, D.DNAME, D.LOC FROM EMP E, DEPT D WHERE 1 <> 1;

SELECT * FROM EMPDEPT_DDL;

CREATE TABLE EMP_ALTER AS SELECT * FROM EMP;

SELECT * FROM EMP_ALTER;

ALTER TABLE EMP_ALTER ADD HP VARCHAR2(20);

SELECT * FROM EMP_ALTER;

ALTER TABLE EMP_ALTER RENAME COLUMN HP TO TEL;

SELECT * FROM EMP_ALTER;

ALTER TABLE EMP_ALTER MODIFY EMPNO NUMBER(5);

DESC EMP_ALTER;

ALTER TABLE EMP_ALTER DROP COLUMN TEL;

SELECT * FROM EMP_ALTER;

RENAME EMP_ALTER TO EMP_RENAME;

DESC EMP_ALTER;

SELECT * FROM EMP_RENAME;

TRUNCATE TABLE EMP_RENAME;

SELECT * FROM EMP_RENAME;

DROP TABLE EMP_RENAME;

DESC EMP_RENAME;

SELECT * FROM DICT;

SELECT * FROM DICTIONARY;

SELECT TABLE_NAME FROM USER_TABLES;

SELECT OWNER, TABLE_NAME FROM ALL_TABLES;

SELECT * FROM DBA_TABLES;

SELECT * FROM DBA_USERS WHERE USERNAME = 'SCOTT';

SELECT * FROM USER_INDEXES;

SELECT * FROM USER_IND_COLUMNS;

CREATE INDEX IDX_EMP_SAL ON EMP(SAL);

SELECT * FROM USER_IND_COLUMNS;

DROP INDEX IDX_EMP_SAL;

SELECT * FROM USER_IND_COLUMNS;

SQLPLUS SYSTEM/oracle GRANT CREATE VIEW TO SCOTT;

CREATE VIEW VW_EMP20 AS ( SELECT EMPNO, ENAME, JOB, DEPTNO FROM EMP WHERE DEPTNO = 20);

SELECT * FROM USER_VIEWS;

SELECT  VIEW_NAME, TEXT_LENGTH, TEXT FROM USER_VIEWS;

SELECT * FROM VW_EMP20;

DROP VIEW VW_EMP20;

SELECT ROWNUM, E.* FROM EMP E;

SELECT ROWNUM, E.* FROM EMP E ORDER BY SAL DESC;

SELECT ROWNUM, E.*FROM(SELECT*FROM EMP E ORDER BY SAL DESC) E;

WITH E AS (SELECT * FROM EMP ORDER BY SAL DESC) SELECT ROWNUM, E.* FROM E;

SELECT ROWNUM, E.* FROM (SELECT * FROM EMP E ORDER BY SAL DESC) E WHERE ROWNUM <= 3;

WITH E AS (SELECT * FROM EMP ORDER BY SAL DESC) SELECT ROWNUM, E.*FROM E WHERE ROWNUM <= 3;

CREATE TABLE DEPT_SEQUENCE AS SELECT * FROM DEPT WHERE 1 <> 1 ;

SELECT * FROM DEPT_SEQUENCE;

CREATE SEQUENCE SEQ_DEPT_SEQUENCE INCREMENT BY 10 START WITH 10 MAXVALUE 90 MINVALUE 0 NOCYCLE CACHE 2;

SELECT * FROM USER_SEQUENCES;

INSERT INTO DEPT_SEQUENCE (DEPTNO, DNAME, LOC) VALUES (SEQ_DEPT_SEQUENCE.NEXTVAL, 'DATABASE', 'SEOUL');

SELECT * FROM DEPT_SEQUENCE ORDER BY DEPTNO;

SELECT SEQ_DEPT_SEQUENCE.CURRVAL FROM DUAL;

INSERT INTO DEPT_SEQUENCE (DEPTNO, DNAME, LOC) VALUES (SEQ_DEPT_SEQUENCE.NEXTVAL, 'DATABASE', 'SEOUL');

SELECT * FROM DEPT_SEQUENCE ORDER BY DEPTNO;

ALTER SEQUENCE SEQ_DEPT_SEQUENCE INCREMENT BY 3 MAXVALUE 99 CYCLE;

SELECT * FROM USER_SEQUENCES;

INSERT INTO DEPT_SEQUENCE (DEPTNO, DNAME, LOC) VALUES (SEQ_DEPT_SEQUENCE.NEXTVAL, 'DATABASE', 'SEOUL');

SELECT * FROM DEPT_SEQUENCE ORDER BY DEPTNO;

INSERT INTO DEPT_SEQUENCE (DEPTNO, DNAME, LOC) VALUES (SEQ_DEPT_SEQUENCE.NEXTVAL, 'DATABASE', 'SEOUL');

SELECT * FROM DEPT_SEQUENCE ORDER BY DEPTNO;

DROP SEQUENCE SEQ_DEPT_SEQUENCE;

SELECT * FROM USER_SEQUENCES;

CREATE SYNONYM E FOR EMP;

SELECT * FROM E;

DROP SYNONYM E;

CREATE TABLE TABLE_NOTNULL (LOGIN_ID VARCHAR2(20) NOT NULL, LOGIN_PWD VARCHAR2(20) NOT NULL, TEL VARCHAR2(20));

DESC TABLE_NOTNULL;

INSERT INTO TABLE_NOTNULL (LOGIN_ID, LOGIN_PWD, TEL) VALUES ('TEST_ID_01', NULL, '010-1234-5678');

INSERT INTO TABLE_NOTNULL (LOGIN_ID, LOGIN_PWD) VALUES('TEST_ID_01', '1234');

SELECT * FROM TABLE_NOTNULL;

UPDATE TABLE_NOTNULL SET LOGIN_PWD = NULL WHERE LOGIN_ID = 'TEST_ID_01';

SELECT OWNER, CONSTRAINT_NAME, CONSTRAINT_TYPE, TABLE_NAME FROM USER_CONSTRAINTS;

CREATE TABLE TABLE_NOTNULL2(LOGIN_ID VARCHAR2(20) CONSTRAINT TBLNN2_LGNID_NN NOT NULL, LOGIN_PWD VARCHAR2(20) CONSTRAINT TBLNN2_LGNPW_NN NOT NULL, TEL VARCHAR2(20));

SELECT OWNER, CONSTRAINT_NAME, CONSTRAINT_TYPE, TABLE_NAME FROM USER_CONSTRAINTS;

ALTER TABLE TABLE_NOTNULL MODIFY(TEL NOT NULL);

UPDATE TABLE_NOTNULL SET TEL = '010-1234-5678' WHERE LOGIN_ID = 'TEST_ID_01';

SELECT * FROM TABLE_NOTNULL;

ALTER TABLE TABLE_NOTNULL MODIFY(TEL NOT NULL);

SELECT OWNER, CONSTRAINT_NAME, CONSTRAINT_TYPE, TABLE_NAME FROM USER_CONSTRAINTS;

ALTER TABLE TABLE_NOTNULL2 MODIFY(TEL CONSTRAINT TBLNN_TEL_NN NOT NULL);

SELECT OWNER, CONSTRAINT_NAME, CONSTRAINT_TYPE, TABLE_NAME FROM USER_CONSTRAINTS;

DESC TABLE_NOTNULL2;

ALTER TABLE TABLE_NOTNULL2 RENAME CONSTRAINT TBLNN_TEL_NN TO TBLNN2_TEL_NN;

SELECT OWNER, CONSTRAINT_NAME, CONSTRAINT_TYPE, TABLE_NAME FROM USER_CONSTRAINTS;

ALTER TABLE TABLE_NOTNULL2 DROP CONSTRAINT TBLNN2_TEL_NN;

DESC TABLE_NOTNULL2;

CREATE TABLE TABLE_UNIQUE(LOGIN_ID VARCHAR2(20) UNIQUE, LOGIN_PWD VARCHAR2(20) NOT NULL, TEL VARCHAR2(20));

DESC TABLE_UNIQUE;

SELECT OWNER, CONSTRAINT_NAME, CONSTRAINT_TYPE, TABLE_NAME FROM USER_CONSTRAINTS WHERE TABLE_NAME = 'TABLE_UNIQUE';

INSERT INTO TABLE_UNIQUE(LOGIN_ID, LOGIN_PWD, TEL) VALUES('TEST_ID_01', 'PWD01', '010-1234-5678');

SELECT * FROM TABLE_UNIQUE;

INSERT INTO TABLE_UNIQUE(LOGIN_ID, LOGIN_PWD, TEL) VALUES('TEST_ID_02', 'PWD01', '010-1234-5678');

SELECT * FROM TABLE_UNIQUE;

INSERT INTO TABLE_UNIQUE(LOGIN_ID, LOGIN_PWD, TEL) VALUES(NULL, 'PWD01', '010-2345-6789');

SELECT * FROM TABLE_UNIQUE;

UPDATE TABLE_UNIQUE SET LOGIN_ID = 'TEST_ID_01' WHERE LOGIN_ID IS NULL;

CREATE TABLE TABLE_UNIQUE2(LOGIN_ID VARCHAR2(20) CONSTRAINT TBLUNQ2_LGNID_UNQ UNIQUE, LOGIN_PWD VARCHAR2(20) CONSTRAINT TBLUNQ2_LGNPW_NN NOT NULL, TEL VARCHAR2(20));

SELECT OWNER, CONSTRAINT_NAME, CONSTRAINT_TYPE, TABLE_NAME FROM USER_CONSTRAINTS WHERE TABLE_NAME LIKE 'TABLE_UNIQUE%';

ALTER TABLE TABLE_UNIQUE MODIFY(TEL UNIQUE);

UPDATE TABLE_UNIQUE SET TEL = NULL;

SELECT * FROM TABLE_UNIQUE;

ALTER TABLE TABLE_UNIQUE MODIFY(TEL UNIQUE);

ALTER TABLE TABLE_UNIQUE2 MODIFY(TEL CONSTRAINT TBLUNQ_TEL_UNQ UNIQUE);

SELECT OWNER, CONSTRAINT_NAME, CONSTRAINT_TYPE, TABLE_NAME FROM USER_CONSTRAINTS WHERE TABLE_NAME LIKE 'TABLE_UNIQUE%';

ALTER TABLE TABLE_UNIQUE2 RENAME CONSTRAINT TBLUNQ_TEL_UNQ TO TBLUNQ2_TEL_UNQ;

SELECT OWNER, CONSTRAINT_NAME, CONSTRAINT_TYPE, TABLE_NAME FROM USER_CONSTRAINTS WHERE TABLE_NAME LIKE 'TABLE_UNIQUE%';

ALTER TABLE TABLE_UNIQUE2 DROP CONSTRAINT TBLUNQ2_TEL_UNQ;

SELECT OWNER, CONSTRAINT_NAME, CONSTRAINT_TYPE, TABLE_NAME FROM USER_CONSTRAINTS WHERE TABLE_NAME LIKE 'TABLE_UNIQUE%';

CREATE TABLE TABLE_PK(LOGIN_ID VARCHAR2(20) PRIMARY KEY, LOGIN_PWD VARCHAR2(20) NOT NULL, TEL VARCHAR2(20));

DESC TABLE_PK;

SELECT OWNER, CONSTRAINT_NAME, CONSTRAINT_TYPE, TABLE_NAME FROM USER_CONSTRAINTS WHERE TABLE_NAME LIKE 'TABLE_PK%';

SELECT INDEX_NAME, TABLE_OWNER, TABLE_NAME FROM USER_INDEXES WHERE TABLE_NAME LIKE 'TABLE_PK%';

CREATE TABLE TABLE_PK2(LOGIN_ID VARCHAR2(20) CONSTRAINT TBLPK2_LGNID_PK PRIMARY KEY, LOGIN_PWD VARCHAR2(20) CONSTRAINT TBLPK2_LGNPW_NN NOT NULL, TEL VARCHAR2(20));

DESC TABLE_PK2;

INSERT INTO TABLE_PK(LOGIN_ID, LOGIN_PWD, TEL) VALUES('TEST_ID_01', 'PWD01', '010-1234-5678');

SELECT * FROM TABLE_PK;

INSERT INTO TABLE_PK(LOGIN_ID, LOGIN_PWD, TEL) VALUES('TEST_ID_01', 'PWD02', '010-2345-6789');

CREATE TABLE DEPT_FK(DEPTNO NUMBER(2) CONSTRAINT DEPTFK_DEPTNO_PK PRIMARY KEY, DNAME VARCHAR2(14), LOC VARCHAR2(13));

DESC DEPT_FK;

CREATE TABLE EMP_FK(EMPNO NUMBER(4) CONSTRAINT EMPFK_EMPNO_PK PRIMARY KEY, ENAME VARCHAR2(10), JOB VARCHAR2(9), MGR NUMBER(4), HIREDATE DATE, SAL NUMBER(7,2), COMM NUMBER(7,2), DEPTNO NUMBER(2) CONSTRAINT EMOFK_DEPTNO_FK REFERENCES DEPT_FK (DEPTNO));

DESC EMP_FK;

INSERT INTO EMP_FK VALUES(9999, 'TEST_NMAME', 'TEST_JOB', NULL, TO_DATE('2001/01/01', 'YYYY/MM/DD'), 3000, NULL, 10);

INSERT INTO DEPT_FK VALUES(10, 'TEST_DNAME', 'TEST_LOC');

SELECT * FROM DEPT_FK;

INSERT INTO EMP_FK VALUES(9999, 'TEST_NMAME', 'TEST_JOB', NULL, TO_DATE('2001/01/01', 'YYYY/MM/DD'), 3000, NULL, 10);

SELECT * FROM EMP_FK;

DELETE FROM DEPT_FK WHERE DEPTNO = 10;



CREATE USER ORCLSTUDY IDENTIFIED BY ORACLE;

GRANT CREATE SESSION TO ORCLSTUDY;

SELECT * FROM ALL_USERS WHERE USERNAME = 'ORCLSTUDY';

SELECT * FROM DBA_USERS WHERE USERNAME = 'ORCLSTUDY';

SELECT * FROM DBA_OBJECTS WHERE OWNER = 'ORCLSTUDY';

ALTER USER ORCLSTUDY IDENTIFIED BY ORCL;

DROP USER ORCLSTUDY;

DROP USER ORCLSTUDY CASCADE;

CREATE USER ORCLSTUDY IDENTIFIED BY ORACLE;

GRANT RESOURCE, CREATE SESSION, CREATE TABLE TO ORCLSTUDY;










